package erpsolaps.erpsolapsmodel.erpsolapsvo;

import erpsolaps.erpsolapsmodel.erpsolapseo.NoteMasterImpl;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Jun 30 11:52:24 PKT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class NoteMasterViewRowImpl extends ViewRowImpl {

    public static final int ENTITY_NOTEMASTER = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        NoteCode {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getNoteCode();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setNoteCode((String) value);
            }
        }
        ,
        TaxCode {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getTaxCode();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setTaxCode((BigDecimal) value);
            }
        }
        ,
        Supplierid {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getSupplierid();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setSupplierid((String) value);
            }
        }
        ,
        DocTypeId {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getDocTypeId();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setDocTypeId((String) value);
            }
        }
        ,
        Locationid {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getLocationid();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setLocationid((String) value);
            }
        }
        ,
        Companyid {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getCompanyid();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setCompanyid((String) value);
            }
        }
        ,
        EntryDate {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getEntryDate();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setEntryDate((Date) value);
            }
        }
        ,
        TotalAmount {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getTotalAmount();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setTotalAmount((BigDecimal) value);
            }
        }
        ,
        RefVoucher {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getRefVoucher();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setRefVoucher((String) value);
            }
        }
        ,
        Submit {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getSubmit();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setSubmit((String) value);
            }
        }
        ,
        PostToIntFace {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getPostToIntFace();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setPostToIntFace((String) value);
            }
        }
        ,
        PostToGl {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getPostToGl();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setPostToGl((String) value);
            }
        }
        ,
        Createdby {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getCreatedby();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setCreatedby((String) value);
            }
        }
        ,
        Modifiedby {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getModifiedby();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setModifiedby((String) value);
            }
        }
        ,
        CreatedDate {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setCreatedDate((Date) value);
            }
        }
        ,
        ModifiedDate {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setModifiedDate((Date) value);
            }
        }
        ,
        NoteType {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getNoteType();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setNoteType((String) value);
            }
        }
        ,
        Deptid {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getDeptid();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setDeptid((String) value);
            }
        }
        ,
        ApPosted {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getApPosted();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setApPosted((String) value);
            }
        }
        ,
        Remarks {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getRemarks();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setRemarks((String) value);
            }
        }
        ,
        AuditorCheck {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getAuditorCheck();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAuditorCheck((String) value);
            }
        }
        ,
        AuditRemarks {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getAuditRemarks();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAuditRemarks((String) value);
            }
        }
        ,
        IsMigrated {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getIsMigrated();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setIsMigrated((String) value);
            }
        }
        ,
        MigratedDate {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getMigratedDate();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setMigratedDate((Date) value);
            }
        }
        ,
        ExchangeRate {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getExchangeRate();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setExchangeRate((BigDecimal) value);
            }
        }
        ,
        LocCurrcode {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getLocCurrcode();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setLocCurrcode((String) value);
            }
        }
        ,
        ProjectId {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getProjectId();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setProjectId((BigDecimal) value);
            }
        }
        ,
        RemarksRescue2 {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getRemarksRescue2();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setRemarksRescue2((String) value);
            }
        }
        ,
        Lcno {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getLcno();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setLcno((String) value);
            }
        }
        ,
        RefVoucherNo {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getRefVoucherNo();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setRefVoucherNo((String) value);
            }
        }
        ,
        RefDoctypeid {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getRefDoctypeid();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setRefDoctypeid((String) value);
            }
        }
        ,
        RefDoctypeId1 {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getRefDoctypeId1();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setRefDoctypeId1((String) value);
            }
        }
        ,
        Notecodeseq {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getNotecodeseq();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setNotecodeseq((Integer) value);
            }
        }
        ,
        txtSupplierName {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.gettxtSupplierName();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.settxtSupplierName((String) value);
            }
        }
        ,
        txtLocationName {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.gettxtLocationName();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.settxtLocationName((String) value);
            }
        }
        ,
        NoteDetailView {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getNoteDetailView();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PuSuppliersView {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getPuSuppliersView();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AllLocationsView {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getAllLocationsView();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AccPuSuppliersView {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getAccPuSuppliersView();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AccAllLocationsView {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getAccAllLocationsView();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        AccVWYesNoQVO {
            public Object get(NoteMasterViewRowImpl obj) {
                return obj.getAccVWYesNoQVO();
            }

            public void put(NoteMasterViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public abstract Object get(NoteMasterViewRowImpl object);

        public abstract void put(NoteMasterViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int NOTECODE = AttributesEnum.NoteCode.index();
    public static final int TAXCODE = AttributesEnum.TaxCode.index();
    public static final int SUPPLIERID = AttributesEnum.Supplierid.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int COMPANYID = AttributesEnum.Companyid.index();
    public static final int ENTRYDATE = AttributesEnum.EntryDate.index();
    public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
    public static final int REFVOUCHER = AttributesEnum.RefVoucher.index();
    public static final int SUBMIT = AttributesEnum.Submit.index();
    public static final int POSTTOINTFACE = AttributesEnum.PostToIntFace.index();
    public static final int POSTTOGL = AttributesEnum.PostToGl.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int NOTETYPE = AttributesEnum.NoteType.index();
    public static final int DEPTID = AttributesEnum.Deptid.index();
    public static final int APPOSTED = AttributesEnum.ApPosted.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int AUDITORCHECK = AttributesEnum.AuditorCheck.index();
    public static final int AUDITREMARKS = AttributesEnum.AuditRemarks.index();
    public static final int ISMIGRATED = AttributesEnum.IsMigrated.index();
    public static final int MIGRATEDDATE = AttributesEnum.MigratedDate.index();
    public static final int EXCHANGERATE = AttributesEnum.ExchangeRate.index();
    public static final int LOCCURRCODE = AttributesEnum.LocCurrcode.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int REMARKSRESCUE2 = AttributesEnum.RemarksRescue2.index();
    public static final int LCNO = AttributesEnum.Lcno.index();
    public static final int REFVOUCHERNO = AttributesEnum.RefVoucherNo.index();
    public static final int REFDOCTYPEID = AttributesEnum.RefDoctypeid.index();
    public static final int REFDOCTYPEID1 = AttributesEnum.RefDoctypeId1.index();
    public static final int NOTECODESEQ = AttributesEnum.Notecodeseq.index();
    public static final int TXTSUPPLIERNAME = AttributesEnum.txtSupplierName.index();
    public static final int TXTLOCATIONNAME = AttributesEnum.txtLocationName.index();
    public static final int NOTEDETAILVIEW = AttributesEnum.NoteDetailView.index();
    public static final int PUSUPPLIERSVIEW = AttributesEnum.PuSuppliersView.index();
    public static final int ALLLOCATIONSVIEW = AttributesEnum.AllLocationsView.index();
    public static final int ACCPUSUPPLIERSVIEW = AttributesEnum.AccPuSuppliersView.index();
    public static final int ACCALLLOCATIONSVIEW = AttributesEnum.AccAllLocationsView.index();
    public static final int ACCVWYESNOQVO = AttributesEnum.AccVWYesNoQVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public NoteMasterViewRowImpl() {
    }

    /**
     * Gets NoteMaster entity object.
     * @return the NoteMaster
     */
    public NoteMasterImpl getNoteMaster() {
        return (NoteMasterImpl) getEntity(ENTITY_NOTEMASTER);
    }

    /**
     * Gets the attribute value for NOTE_CODE using the alias name NoteCode.
     * @return the NOTE_CODE
     */
    public String getNoteCode() {
        return (String) getAttributeInternal(NOTECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTE_CODE using the alias name NoteCode.
     * @param value value to set the NOTE_CODE
     */
    public void setNoteCode(String value) {
        setAttributeInternal(NOTECODE, value);
    }

    /**
     * Gets the attribute value for TAX_CODE using the alias name TaxCode.
     * @return the TAX_CODE
     */
    public BigDecimal getTaxCode() {
        return (BigDecimal) getAttributeInternal(TAXCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_CODE using the alias name TaxCode.
     * @param value value to set the TAX_CODE
     */
    public void setTaxCode(BigDecimal value) {
        setAttributeInternal(TAXCODE, value);
    }

    /**
     * Gets the attribute value for SUPPLIERID using the alias name Supplierid.
     * @return the SUPPLIERID
     */
    public String getSupplierid() {
        return (String) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUPPLIERID using the alias name Supplierid.
     * @param value value to set the SUPPLIERID
     */
    public void setSupplierid(String value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE_ID using the alias name DocTypeId.
     * @return the DOC_TYPE_ID
     */
    public String getDocTypeId() {
        return (String) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_ID using the alias name DocTypeId.
     * @param value value to set the DOC_TYPE_ID
     */
    public void setDocTypeId(String value) {
        setAttributeInternal(DOCTYPEID, value);
    }

    /**
     * Gets the attribute value for LOCATIONID using the alias name Locationid.
     * @return the LOCATIONID
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOCATIONID using the alias name Locationid.
     * @param value value to set the LOCATIONID
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for COMPANYID using the alias name Companyid.
     * @return the COMPANYID
     */
    public String getCompanyid() {
        return (String) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPANYID using the alias name Companyid.
     * @param value value to set the COMPANYID
     */
    public void setCompanyid(String value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for ENTRY_DATE using the alias name EntryDate.
     * @return the ENTRY_DATE
     */
    public Date getEntryDate() {
        return (Date) getAttributeInternal(ENTRYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTRY_DATE using the alias name EntryDate.
     * @param value value to set the ENTRY_DATE
     */
    public void setEntryDate(Date value) {
        setAttributeInternal(ENTRYDATE, value);
    }

    /**
     * Gets the attribute value for TOTAL_AMOUNT using the alias name TotalAmount.
     * @return the TOTAL_AMOUNT
     */
    public BigDecimal getTotalAmount() {
        return (BigDecimal) getAttributeInternal(TOTALAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for TOTAL_AMOUNT using the alias name TotalAmount.
     * @param value value to set the TOTAL_AMOUNT
     */
    public void setTotalAmount(BigDecimal value) {
        setAttributeInternal(TOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for REF_VOUCHER using the alias name RefVoucher.
     * @return the REF_VOUCHER
     */
    public String getRefVoucher() {
        return (String) getAttributeInternal(REFVOUCHER);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_VOUCHER using the alias name RefVoucher.
     * @param value value to set the REF_VOUCHER
     */
    public void setRefVoucher(String value) {
        setAttributeInternal(REFVOUCHER, value);
    }

    /**
     * Gets the attribute value for SUBMIT using the alias name Submit.
     * @return the SUBMIT
     */
    public String getSubmit() {
        return (String) getAttributeInternal(SUBMIT);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBMIT using the alias name Submit.
     * @param value value to set the SUBMIT
     */
    public void setSubmit(String value) {
        setAttributeInternal(SUBMIT, value);
    }

    /**
     * Gets the attribute value for POST_TO_INT_FACE using the alias name PostToIntFace.
     * @return the POST_TO_INT_FACE
     */
    public String getPostToIntFace() {
        return (String) getAttributeInternal(POSTTOINTFACE);
    }

    /**
     * Sets <code>value</code> as attribute value for POST_TO_INT_FACE using the alias name PostToIntFace.
     * @param value value to set the POST_TO_INT_FACE
     */
    public void setPostToIntFace(String value) {
        setAttributeInternal(POSTTOINTFACE, value);
    }

    /**
     * Gets the attribute value for POST_TO_GL using the alias name PostToGl.
     * @return the POST_TO_GL
     */
    public String getPostToGl() {
        return (String) getAttributeInternal(POSTTOGL);
    }

    /**
     * Sets <code>value</code> as attribute value for POST_TO_GL using the alias name PostToGl.
     * @param value value to set the POST_TO_GL
     */
    public void setPostToGl(String value) {
        setAttributeInternal(POSTTOGL, value);
    }

    /**
     * Gets the attribute value for CREATEDBY using the alias name Createdby.
     * @return the CREATEDBY
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATEDBY using the alias name Createdby.
     * @param value value to set the CREATEDBY
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for MODIFIEDBY using the alias name Modifiedby.
     * @return the MODIFIEDBY
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIEDBY using the alias name Modifiedby.
     * @param value value to set the MODIFIEDBY
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for MODIFIED_DATE using the alias name ModifiedDate.
     * @return the MODIFIED_DATE
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_DATE using the alias name ModifiedDate.
     * @param value value to set the MODIFIED_DATE
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for NOTE_TYPE using the alias name NoteType.
     * @return the NOTE_TYPE
     */
    public String getNoteType() {
        return (String) getAttributeInternal(NOTETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTE_TYPE using the alias name NoteType.
     * @param value value to set the NOTE_TYPE
     */
    public void setNoteType(String value) {
        setAttributeInternal(NOTETYPE, value);
    }

    /**
     * Gets the attribute value for DEPTID using the alias name Deptid.
     * @return the DEPTID
     */
    public String getDeptid() {
        return (String) getAttributeInternal(DEPTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPTID using the alias name Deptid.
     * @param value value to set the DEPTID
     */
    public void setDeptid(String value) {
        setAttributeInternal(DEPTID, value);
    }

    /**
     * Gets the attribute value for AP_POSTED using the alias name ApPosted.
     * @return the AP_POSTED
     */
    public String getApPosted() {
        return (String) getAttributeInternal(APPOSTED);
    }

    /**
     * Sets <code>value</code> as attribute value for AP_POSTED using the alias name ApPosted.
     * @param value value to set the AP_POSTED
     */
    public void setApPosted(String value) {
        setAttributeInternal(APPOSTED, value);
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for AUDITOR_CHECK using the alias name AuditorCheck.
     * @return the AUDITOR_CHECK
     */
    public String getAuditorCheck() {
        return (String) getAttributeInternal(AUDITORCHECK);
    }

    /**
     * Sets <code>value</code> as attribute value for AUDITOR_CHECK using the alias name AuditorCheck.
     * @param value value to set the AUDITOR_CHECK
     */
    public void setAuditorCheck(String value) {
        setAttributeInternal(AUDITORCHECK, value);
    }

    /**
     * Gets the attribute value for AUDIT_REMARKS using the alias name AuditRemarks.
     * @return the AUDIT_REMARKS
     */
    public String getAuditRemarks() {
        return (String) getAttributeInternal(AUDITREMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for AUDIT_REMARKS using the alias name AuditRemarks.
     * @param value value to set the AUDIT_REMARKS
     */
    public void setAuditRemarks(String value) {
        setAttributeInternal(AUDITREMARKS, value);
    }

    /**
     * Gets the attribute value for IS_MIGRATED using the alias name IsMigrated.
     * @return the IS_MIGRATED
     */
    public String getIsMigrated() {
        return (String) getAttributeInternal(ISMIGRATED);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_MIGRATED using the alias name IsMigrated.
     * @param value value to set the IS_MIGRATED
     */
    public void setIsMigrated(String value) {
        setAttributeInternal(ISMIGRATED, value);
    }

    /**
     * Gets the attribute value for MIGRATED_DATE using the alias name MigratedDate.
     * @return the MIGRATED_DATE
     */
    public Date getMigratedDate() {
        return (Date) getAttributeInternal(MIGRATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MIGRATED_DATE using the alias name MigratedDate.
     * @param value value to set the MIGRATED_DATE
     */
    public void setMigratedDate(Date value) {
        setAttributeInternal(MIGRATEDDATE, value);
    }

    /**
     * Gets the attribute value for EXCHANGE_RATE using the alias name ExchangeRate.
     * @return the EXCHANGE_RATE
     */
    public BigDecimal getExchangeRate() {
        return (BigDecimal) getAttributeInternal(EXCHANGERATE);
    }

    /**
     * Sets <code>value</code> as attribute value for EXCHANGE_RATE using the alias name ExchangeRate.
     * @param value value to set the EXCHANGE_RATE
     */
    public void setExchangeRate(BigDecimal value) {
        setAttributeInternal(EXCHANGERATE, value);
    }

    /**
     * Gets the attribute value for LOC_CURRCODE using the alias name LocCurrcode.
     * @return the LOC_CURRCODE
     */
    public String getLocCurrcode() {
        return (String) getAttributeInternal(LOCCURRCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for LOC_CURRCODE using the alias name LocCurrcode.
     * @param value value to set the LOC_CURRCODE
     */
    public void setLocCurrcode(String value) {
        setAttributeInternal(LOCCURRCODE, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public BigDecimal getProjectId() {
        return (BigDecimal) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(BigDecimal value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for REMARKS_RESCUE_2 using the alias name RemarksRescue2.
     * @return the REMARKS_RESCUE_2
     */
    public String getRemarksRescue2() {
        return (String) getAttributeInternal(REMARKSRESCUE2);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS_RESCUE_2 using the alias name RemarksRescue2.
     * @param value value to set the REMARKS_RESCUE_2
     */
    public void setRemarksRescue2(String value) {
        setAttributeInternal(REMARKSRESCUE2, value);
    }

    /**
     * Gets the attribute value for LCNO using the alias name Lcno.
     * @return the LCNO
     */
    public String getLcno() {
        return (String) getAttributeInternal(LCNO);
    }

    /**
     * Sets <code>value</code> as attribute value for LCNO using the alias name Lcno.
     * @param value value to set the LCNO
     */
    public void setLcno(String value) {
        setAttributeInternal(LCNO, value);
    }

    /**
     * Gets the attribute value for REF_VOUCHER_NO using the alias name RefVoucherNo.
     * @return the REF_VOUCHER_NO
     */
    public String getRefVoucherNo() {
        return (String) getAttributeInternal(REFVOUCHERNO);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_VOUCHER_NO using the alias name RefVoucherNo.
     * @param value value to set the REF_VOUCHER_NO
     */
    public void setRefVoucherNo(String value) {
        setAttributeInternal(REFVOUCHERNO, value);
    }

    /**
     * Gets the attribute value for REF_DOCTYPEID using the alias name RefDoctypeid.
     * @return the REF_DOCTYPEID
     */
    public String getRefDoctypeid() {
        return (String) getAttributeInternal(REFDOCTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_DOCTYPEID using the alias name RefDoctypeid.
     * @param value value to set the REF_DOCTYPEID
     */
    public void setRefDoctypeid(String value) {
        setAttributeInternal(REFDOCTYPEID, value);
    }

    /**
     * Gets the attribute value for REF_DOCTYPE_ID using the alias name RefDoctypeId1.
     * @return the REF_DOCTYPE_ID
     */
    public String getRefDoctypeId1() {
        return (String) getAttributeInternal(REFDOCTYPEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for REF_DOCTYPE_ID using the alias name RefDoctypeId1.
     * @param value value to set the REF_DOCTYPE_ID
     */
    public void setRefDoctypeId1(String value) {
        setAttributeInternal(REFDOCTYPEID1, value);
    }

    /**
     * Gets the attribute value for NOTECODESEQ using the alias name Notecodeseq.
     * @return the NOTECODESEQ
     */
    public Integer getNotecodeseq() {
        return (Integer) getAttributeInternal(NOTECODESEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTECODESEQ using the alias name Notecodeseq.
     * @param value value to set the NOTECODESEQ
     */
    public void setNotecodeseq(Integer value) {
        setAttributeInternal(NOTECODESEQ, value);
    }

    /**
     * Gets the attribute value for TXT_SUPPLIER_NAME using the alias name txtSupplierName.
     * @return the TXT_SUPPLIER_NAME
     */
    public String gettxtSupplierName() {
        return (String) getAttributeInternal(TXTSUPPLIERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TXT_SUPPLIER_NAME using the alias name txtSupplierName.
     * @param value value to set the TXT_SUPPLIER_NAME
     */
    public void settxtSupplierName(String value) {
        setAttributeInternal(TXTSUPPLIERNAME, value);
    }

    /**
     * Gets the attribute value for TXT_LOCATION_NAME using the alias name txtLocationName.
     * @return the TXT_LOCATION_NAME
     */
    public String gettxtLocationName() {
        return (String) getAttributeInternal(TXTLOCATIONNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TXT_LOCATION_NAME using the alias name txtLocationName.
     * @param value value to set the TXT_LOCATION_NAME
     */
    public void settxtLocationName(String value) {
        setAttributeInternal(TXTLOCATIONNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link NoteDetailView.
     */
    public RowIterator getNoteDetailView() {
        return (RowIterator) getAttributeInternal(NOTEDETAILVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link PuSuppliersView.
     */
    public Row getPuSuppliersView() {
        return (Row) getAttributeInternal(PUSUPPLIERSVIEW);
    }

    /**
     * Sets the master-detail link PuSuppliersView between this object and <code>value</code>.
     */
    public void setPuSuppliersView(Row value) {
        setAttributeInternal(PUSUPPLIERSVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link AllLocationsView.
     */
    public Row getAllLocationsView() {
        return (Row) getAttributeInternal(ALLLOCATIONSVIEW);
    }

    /**
     * Sets the master-detail link AllLocationsView between this object and <code>value</code>.
     */
    public void setAllLocationsView(Row value) {
        setAttributeInternal(ALLLOCATIONSVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccPuSuppliersView.
     */
    public RowSet getAccPuSuppliersView() {
        return (RowSet) getAttributeInternal(ACCPUSUPPLIERSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccAllLocationsView.
     */
    public RowSet getAccAllLocationsView() {
        return (RowSet) getAttributeInternal(ACCALLLOCATIONSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccVWYesNoQVO.
     */
    public RowSet getAccVWYesNoQVO() {
        return (RowSet) getAttributeInternal(ACCVWYESNOQVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
    @Override
    public boolean isAttributeUpdateable(int i) {
        // TODO Implement this method
        if (getSubmit().equals("Y")) {
            return false;
       }
        return super.isAttributeUpdateable(i);
    }
}

